{"version":3,"sources":["components/title/index.js","components/title/title.js","store/action-types/counter.js","store/actions/counter.js","components/counter/index.js","components/counter/counter.js","components/app/index.js","components/app/app.js","store/redusers/counter.js","store/index.js","index.js"],"names":["Title","connect","state","min","counter","max","class","id","incAT","decAT","incAC","type","decAC","Counter","value","actions","inc","dec","onClick","App","initialState","res","action","MAX","MIN","store","createStore","combineReducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAEeA,ECaAC,aANS,SAAAC,GACpB,MAAO,CACHC,IAAKD,EAAME,QAAQD,IACnBE,IAAKH,EAAME,QAAQC,OAGZJ,EAbD,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,IAAKE,EAAU,EAAVA,IAClB,OACI,qBAAIC,MAAM,QAAV,qEACe,sBAAMC,GAAG,OAAT,SAAkBJ,IADjC,iBACiD,sBAAMI,GAAG,KAAT,SAAgBF,UCJnEG,EAAQ,MACRC,EAAQ,MCCRC,EAAQ,iBAAO,CAAEC,KAAMH,IACvBI,EAAQ,iBAAO,CAAED,KAAMF,ICFdI,ECmBAZ,aALS,SAAAC,GACpB,MAAO,CACHY,MAAOZ,EAAME,QAAQU,SAGWC,EAAzBd,EAlBC,SAAC,GAAyB,IAAvBa,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IAC3B,OACI,sBAAKX,MAAM,MAAX,UACI,wBAAQC,GAAG,MAAMD,MAAM,MACnBY,QAAUD,EADd,oBAGA,sBAAMV,GAAG,UAAUD,MAAM,UAAzB,SAAqCQ,IACrC,wBAAQP,GAAG,MAAMD,MAAM,MACnBY,QAAUF,EADd,qBCRGG,ECCH,WACV,OACI,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,sBCLFC,EAAe,CACjBN,MAAO,GACPX,IAAK,EACLE,IAAK,KAwBMD,EAtBC,WAAmC,IAC3CiB,EADSnB,EAAiC,uDAAzBkB,EAAcE,EAAW,uCAE9C,OAAOA,EAAOX,MACV,KAAKH,EACD,IAAMe,EAAMrB,EAAMG,IAElB,OADAgB,EAAMnB,EAAMY,MAAQ,EACb,2BACAZ,GADP,IAEIY,MAAOO,GAAOE,EAAMA,EAAMF,IAElC,KAAKZ,EACD,IAAMe,EAAMtB,EAAMC,IAElB,OADAkB,EAAMnB,EAAMY,MAAQ,EACb,2BACAZ,GADP,IAEIY,MAAOO,EAAMG,EAAMH,EAAMG,IAEjC,QACI,OAAOtB,ICnBJuB,EAHDC,YAAYC,YAAgB,CACtCvB,aCGJwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.e4a5e861.chunk.js","sourcesContent":["import Title from \"./title\";\r\n\r\nexport default Title","import { connect } from 'react-redux';\r\n\r\nconst Title = ({ min, max }) => {\r\n    return (\r\n        <h1 class='title'>\r\n            Счётчик от <span id='from'>{ min }</span> до <span id='to'>{ max }</span>\r\n        </h1>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        min: state.counter.min,\r\n        max: state.counter.max\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Title);","// Action types\r\nconst incAT = 'INC';\r\nconst decAT = 'DEC';\r\n\r\nexport {\r\n    incAT,\r\n    decAT,\r\n};","import { decAT, incAT } from \"../action-types/counter\";\r\n\r\n// Action creates\r\nconst incAC = () => ({ type: incAT });\r\nconst decAC = () => ({ type: decAT });  \r\n\r\nexport {\r\n    incAC as inc,\r\n    decAC as dec,\r\n};","import Counter from \"./counter\";\r\n\r\nexport default Counter;\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/counter';\r\n\r\nconst Counter = ({ value, inc, dec }) => {\r\n    return (\r\n        <div class='app'>\r\n            <button id='dec' class='btn'\r\n                onClick={ dec }\r\n            >&#8722;</button>\r\n            <span id='counter' class='counter'>{ value }</span>\r\n            <button id='inc' class='btn'\r\n                onClick={ inc }\r\n            >&#43;</button>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        value: state.counter.value\r\n    };\r\n};\r\nexport default connect(mapStateToProps, actions)(Counter);","import App from \"./app\";\r\n\r\nexport default App;","import Title from \"../title\";\r\nimport Counter from \"../counter\";\r\n\r\nconst App = () => {\r\n  return (\r\n      <>\r\n        <Title />\r\n        <Counter />\r\n      </>\r\n  );\r\n};\r\n\r\nexport default App;","import { decAT, incAT } from \"../action-types/counter\";\r\n\r\nconst initialState = {\r\n    value: 42,\r\n    min: 0,\r\n    max: 100,\r\n};\r\nconst counter = (state = initialState, action) => {\r\n    let res;\r\n    switch(action.type) {\r\n        case incAT:\r\n            const MAX = state.max;\r\n            res = state.value + 1;\r\n            return {\r\n                ...state,\r\n                value: res >= MAX ? MAX : res\r\n            };\r\n        case decAT:\r\n            const MIN = state.min;\r\n            res = state.value - 1;\r\n            return {\r\n                ...state,\r\n                value: res > MIN ? res : MIN\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default counter;","import { createStore, combineReducers } from \"redux\";\r\nimport counter from \"../store/redusers/counter\";\r\n\r\nconst store = createStore(combineReducers({\r\n    counter\r\n}));\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/app';\r\nimport './index.css';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}